<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tutorial on Scott Westover</title><link>https://scottwestover.dev/tags/tutorial/</link><description>Recent content in Tutorial on Scott Westover</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 10 Apr 2023 06:00:02 +0000</lastBuildDate><atom:link href="https://scottwestover.dev/tags/tutorial/index.xml" rel="self" type="application/rss+xml"/><item><title>Build A Connect Four Library In TypeScript - Part 3 (Video)</title><link>https://scottwestover.dev/post/2023/04/build-a-connect-four-library-in-typescript-part-3-video/</link><pubDate>Mon, 10 Apr 2023 06:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2023/04/build-a-connect-four-library-in-typescript-part-3-video/</guid><description>If you are interested in learning how to create a reusable Connect Four library in TypeScript, then you should check out the third video in my new series that I released on YouTube: Building a Connect Four Library in TypeScript - Step by Step Guide - Part 3.
If you prefer a written tutorial, then you can find the same content here on my blog: Build A Connect Four Library In TypeScript - Part 3 .</description></item><item><title>Phaser 3 Inter Scene Communication Tutorial Video</title><link>https://scottwestover.dev/post/2023/03/phaser-3-inter-scene-communication-tutorial-video/</link><pubDate>Sun, 12 Mar 2023 18:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2023/03/phaser-3-inter-scene-communication-tutorial-video/</guid><description>If you are interested in learning how you can easily communicate between Scenes in Phaser 3 by using the Phaser 3 EventEmitter, then you should check out the third video in my new series that I released on YouTube: Phaser 3 Tutorial: Inter-Scene Communication Made Easy!.
I hope you enjoy the new content! Please feel free to post any questions or comments below.</description></item><item><title>Creating a Zelda-Style Health Bar in Phaser 3 - Tutorial Video</title><link>https://scottwestover.dev/post/2023/03/creating-a-zelda-style-health-bar-in-phaser-3-tutorial-video/</link><pubDate>Tue, 07 Mar 2023 18:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2023/03/creating-a-zelda-style-health-bar-in-phaser-3-tutorial-video/</guid><description>If you are interested in learning how to create a simple health bar in Phaser 3 to look like the health bars from games like the Legend of Zelda!, then you should check out the third video in my new series that I released on YouTube: Creating a Zelda-Style Health Bar in Phaser 3 - Tutorial.
I hope you enjoy the new content! Please feel free to post any questions or comments below.</description></item><item><title>Build A Connect Four Library In TypeScript - Part 2 (Video)</title><link>https://scottwestover.dev/post/2023/02/build-a-connect-four-library-in-typescript-part-2-video/</link><pubDate>Mon, 27 Feb 2023 06:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2023/02/build-a-connect-four-library-in-typescript-part-2-video/</guid><description>If you are interested in learning how to create a reusable Connect Four library in TypeScript, then you should check out the second video in my new series that I released on YouTube earlier today: Building a Connect Four Library in TypeScript - Step by Step Guide - Part 2.
If you prefer a written tutorial, then you can find the same content here on my blog: Build A Connect Four Library In TypeScript - Part 2 .</description></item><item><title>Build A Connect Four Library In TypeScript - Part 1 (Video)</title><link>https://scottwestover.dev/post/2023/02/build-a-connect-four-library-in-typescript-part-1-video/</link><pubDate>Thu, 23 Feb 2023 06:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2023/02/build-a-connect-four-library-in-typescript-part-1-video/</guid><description>If you are interested in learning how to create a reusable Connect Four library in TypeScript, then you should check out my new video that I released on YouTube earlier today: Building a Connect Four Library in TypeScript - Step by Step Guide - Part 1.
If you prefer a written tutorial, then you can find the same content here on my blog: Build A Connect Four Library In TypeScript - Part 1 .</description></item><item><title>Parallax Scrolling Background Tutorial in Phaser 3 Video Released</title><link>https://scottwestover.dev/post/2023/02/parallax-scrolling-background-tutorial-in-phaser-3-video-released/</link><pubDate>Fri, 17 Feb 2023 12:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2023/02/parallax-scrolling-background-tutorial-in-phaser-3-video-released/</guid><description>If you are interested in learning about Phaser 3 and how to create a simple parallax scrolling background using this framework, then you should check out my new video that I released on YouTube earlier today: Parallax Scrolling Background Tutorial in Phaser 3.
I hope you enjoy the new content! Please feel free to post any questions or comments below.</description></item><item><title>Build A Connect Four Library In TypeScript - Part 5</title><link>https://scottwestover.dev/post/2023/02/build-a-connect-four-library-in-typescript-part-5/</link><pubDate>Tue, 07 Feb 2023 06:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2023/02/build-a-connect-four-library-in-typescript-part-5/</guid><description>In this series, we will go over how to create a reusable TypeScript class that can be used to build the game Connect Four, and in a future series we will see how we can use this library to create implementations of the Connect Four game for the CLI and the web.
Previously, in part 4 , we finished updating the logic for checking if a player won the game by getting a Connect Four.</description></item><item><title>Build A Connect Four Library In TypeScript - Part 4</title><link>https://scottwestover.dev/post/2023/02/build-a-connect-four-library-in-typescript-part-4/</link><pubDate>Fri, 03 Feb 2023 06:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2023/02/build-a-connect-four-library-in-typescript-part-4/</guid><description>In this series, we will go over how to create a reusable TypeScript class that can be used to build the game Connect Four, and in a future series we will see how we can use this library to create implementations of the Connect Four game for the CLI and the web.
Previously, in part 3 , we added the logic for allowing the player to place a game piece in a column, logic for validating this move, and we started adding the logic for if the game is over.</description></item><item><title>Build A Connect Four Library In TypeScript - Part 3</title><link>https://scottwestover.dev/post/2023/01/build-a-connect-four-library-in-typescript-part-3/</link><pubDate>Fri, 20 Jan 2023 06:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2023/01/build-a-connect-four-library-in-typescript-part-3/</guid><description>In this series, we will go over how to create a reusable TypeScript class that can be used to build the game Connect Four, and in a future series we will see how we can use this library to create implementations of the Connect Four game for the CLI and the web.
Previously, in part 2 , we added the initial game initialization logic, the ability to reset the game state, and we then learned how we could test our code using the uvu framework.</description></item><item><title>Build A Connect Four Library In TypeScript - Part 2</title><link>https://scottwestover.dev/post/2023/01/build-a-connect-four-library-in-typescript-part-2/</link><pubDate>Tue, 17 Jan 2023 06:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2023/01/build-a-connect-four-library-in-typescript-part-2/</guid><description>In this series, we will go over how to create a reusable TypeScript class that can be used to build the game Connect Four, and in a future series we will see how we can use this library to create implementations of the Connect Four game for the CLI and the web.
Previously, in part 1 , we reviewed the rules and game play of the game Connect Four and we started to build out the initial ConnectFour class by adding the properties and methods that will be needed.</description></item><item><title>Build A Connect Four Library In TypeScript - Part 1</title><link>https://scottwestover.dev/post/2023/01/build-a-connect-four-library-in-typescript-part-1/</link><pubDate>Sun, 15 Jan 2023 06:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2023/01/build-a-connect-four-library-in-typescript-part-1/</guid><description>In this series, we will go over how to create a reusable TypeScript class that can be used to build the game Connect Four, and in a future series we will see how we can use this library to create implementations of the Connect Four game for the CLI and the web.
In part 1 of this series, we are going to review the rules and game play of the game Connect Four and we will start to build out the initial ConnectFour class by adding the properties and methods that will be needed.</description></item><item><title>HTML5 Game Development - Project Setup</title><link>https://scottwestover.dev/post/2022/09/html5-game-development-project-setup/</link><pubDate>Thu, 01 Sep 2022 06:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2022/09/html5-game-development-project-setup/</guid><description>Before we start learning about HTML5 Canvas and start writing any code, the first thing we need to do is setup a development environment that will allow us to easily edit our files, serve our static files on a local web server, and view our changes in real time as we make them.
For this series, we will be trying to keep things as simple as possible, so we will not be using things like node, npm, webpack, vite, etc.</description></item><item><title>HTML5 Game Development - Tutorial Series Announcement</title><link>https://scottwestover.dev/post/2022/08/html5-game-development-tutorial-series-announcement/</link><pubDate>Tue, 30 Aug 2022 06:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2022/08/html5-game-development-tutorial-series-announcement/</guid><description>Today, I wanted to introduce a new series that I will begin working on that will be focusing on creating games with pure JavaScript and rendered on HTML using the HTML Canvas element . This series will focus on step by step tutorials for learning the basics of working with the HTML Canvas elements for game development and then we will move on to creating games.
As we progress through the series, we will be building blocks of re-usable code that you will be able to use to create your own games.</description></item><item><title>HTML5 Game Prototyping Course - Part 1</title><link>https://scottwestover.dev/post/2022/04/html5-game-prototyping-course-part-1/</link><pubDate>Mon, 25 Apr 2022 00:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2022/04/html5-game-prototyping-course-part-1/</guid><description>Welcome everyone! This is the first of many posts that will cover the topic of game prototyping and we will be putting game prototyping into practice by building some basic games in HTML5 using TypeScript.
What is game prototyping? In game design, game prototyping is the process by which a game designer builds the simplest version of their game in order to test their idea and get feedback. A good prototype will convey the mechanics of the game the designer wants to build and it will allow others to test the gameplay.</description></item><item><title>Plop Basics Tutorial</title><link>https://scottwestover.dev/post/2022/04/plop-basics-tutorial/</link><pubDate>Mon, 11 Apr 2022 00:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2022/04/plop-basics-tutorial/</guid><description>Update: If you would prefer to watch a video on this content, you can see the content here on YouTube: Developer Bytes - Generating Templates With Plopjs.
In one of my recent developer bytes articles, I discussed with you some of the benefits of the micro-generator framework tool Plop and how I used this tool in my day to day. In this article I want to expand on the example the example I shared in the last article.</description></item><item><title>Getting Started With GitHub Actions Part 1</title><link>https://scottwestover.dev/post/2022/01/getting-started-with-github-actions-part-1/</link><pubDate>Fri, 28 Jan 2022 00:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2022/01/getting-started-with-github-actions-part-1/</guid><description>GitHub Actions is a fantastic CI/CD platform that allows you to set up custom workflows to do a variety of tasks, anything from running unit tests anytime there is a pull request to building your web application and deploying that application to your hosting service.
If you are not familiar with CI/CD, this is a method to allow you to frequently deliver software by introducing automation into your development process. The main concepts for CI/CD are: continuous integration, continuous delivery, and continuous deployment.</description></item><item><title>Tips For Publishing A npm Package</title><link>https://scottwestover.dev/post/2021/12/tips-for-publishing-a-npm-package/</link><pubDate>Wed, 22 Dec 2021 00:00:01 +0000</pubDate><guid>https://scottwestover.dev/post/2021/12/tips-for-publishing-a-npm-package/</guid><description>As a developer, one of the things I strive to do is reuse my code across my various projects when possible, and one of the best tools available to do this is the npm registry. If you are not familiar, npm is a package manager for the JavaScript programming language and npm is the default package manager for the Node.js runtime environment. npm is a free registry that allows you to publish both public and private npm packages that can be shared with other npm users.</description></item><item><title>Creating A Memory Game Class in TypeScript</title><link>https://scottwestover.dev/post/2020/06/creating-a-memory-game-in-typescript/</link><pubDate>Mon, 15 Jun 2020 00:00:01 +0000</pubDate><guid>https://scottwestover.dev/post/2020/06/creating-a-memory-game-in-typescript/</guid><description>Intro The purpose of this tutorial is to show you how to create a simple Memory Game class in TypeScript that will contain all of the core game logic for building a simple Memory Game. For this tutorial, we will be testing our game logic using the browser developer console. However, in future tutorials, I will be showing you how we can take this class and create a basic Memory Game using HTML5 game frameworks like Phaser and Kontra.</description></item><item><title>Adding Gitment to your Hugo blog</title><link>https://scottwestover.dev/post/2020/01/adding-gitment-to-your-hugo-blog/</link><pubDate>Sat, 18 Jan 2020 06:00:00 +0000</pubDate><guid>https://scottwestover.dev/post/2020/01/adding-gitment-to-your-hugo-blog/</guid><description>In my last post, I talked a little bit about Gitment and how you could use that library for using GitHub Issues for comments on your blog. In this post, I am going to share with you how you can add Gitment to your Hugo blog. If you are not familiar with Gitment, it is a small JS library that leverages GitHub Issues for storing comments on each post.
Some key things to note about Gitment:</description></item><item><title>Using ES6 With Phaser 3</title><link>https://scottwestover.dev/post/2018/10/using-es6-with-phaser-3-tutorial/</link><pubDate>Sat, 27 Oct 2018 22:00:00 +0000</pubDate><guid>https://scottwestover.dev/post/2018/10/using-es6-with-phaser-3-tutorial/</guid><description>Phaser 3 offers a fantastic Webpack project template that makes it easy to start creating games right away. This template uses Webpack Dev Server , which provides live reloading while working on your game. It will also bundle all of JS files into one file once you are ready to deploy your game.
However, one thing that is missing from this template for me is support for ES6 and other newer features of JS.</description></item><item><title>Creating A Phaser 3 Template Tutorial - Part 1</title><link>https://scottwestover.dev/post/2018/10/creating-a-phaser-3-template-tutorial-part-1/</link><pubDate>Tue, 16 Oct 2018 21:34:18 +0000</pubDate><guid>https://scottwestover.dev/post/2018/10/creating-a-phaser-3-template-tutorial-part-1/</guid><description>My new Phaser 3 tutorial on creating a Phaser 3 template is finally live on Game Dev Academy.
In this tuorial, I show you how to create a Phaser 3 template that you will be able to extend and reuse in future Phaser 3 game you work on. In the tutorial, I show you how to:
extend the basic Phaser 3 template adding a Boot scene adding a Preloader scene In part 2 we will wrap up the tutorial by covering the following topics:</description></item><item><title>Phaser Progressive Web Apps Tutorial</title><link>https://scottwestover.dev/post/2018/09/phaser-progressive-web-apps-tutorial/</link><pubDate>Tue, 18 Sep 2018 21:34:18 +0000</pubDate><guid>https://scottwestover.dev/post/2018/09/phaser-progressive-web-apps-tutorial/</guid><description>My new Phaser 3 tutorial on creating an offline first game in Phaser 3 is finally live on Game Dev Academy.
In this tuorial, I show you how to turn your Phaser Game into a Progressive Web App. In the tutorial, I show you how to:
add a service worker cache assets manage your cache assets how to allow users to add your game to their home screen You can checkout the tutorial here: https://gamedevacademy.</description></item><item><title>Create a Dialog Modal Plugin in Phaser 3 – Part 2 Tutorial</title><link>https://scottwestover.dev/post/2018/05/create-a-dialog-modal-plugin-in-phaser-3-part-2/</link><pubDate>Tue, 29 May 2018 21:34:18 +0000</pubDate><guid>https://scottwestover.dev/post/2018/05/create-a-dialog-modal-plugin-in-phaser-3-part-2/</guid><description>My new Phaser 3 tutorial on making a dialog modal plugin in Phaser 3 is finally live on Game Dev Academy. This is the second part of the tutorial.
In this tuorial, we pickup were we left off in the first tutorial we focus on the following:
adding logic to for a close button on the dialog window add logic to show/hide the window add logic to show dialog add logic to animate the text You can checkout the tutorial here: https://gamedevacademy.</description></item><item><title>Create a Dialog Modal Plugin in Phaser 3 – Part 1 Tutorial</title><link>https://scottwestover.dev/post/2018/05/create-a-dialog-modal-plugin-in-phaser-3-part-1/</link><pubDate>Tue, 15 May 2018 21:34:18 +0000</pubDate><guid>https://scottwestover.dev/post/2018/05/create-a-dialog-modal-plugin-in-phaser-3-part-1/</guid><description>My new Phaser 3 tutorial on making a dialog modal plugin in Phaser 3 is finally live on Game Dev Academy. This is the first part of the tutorial.
In this tuorial, we focus on the basics of creating a plugin that can be reused in all of your Phaser games. We then move on to creating our basic plugin, and then we wrap up the tutorial by getting the plugin to render our dialog window in our game.</description></item><item><title>Create A Basic Multiplayer Game In Phaser 3 With Socket.io – Part 2 Tutorial</title><link>https://scottwestover.dev/post/2018/05/create-a-basic-multiplayer-game-in-phaser-3-with-socket-io-part-2/</link><pubDate>Wed, 02 May 2018 21:34:18 +0000</pubDate><guid>https://scottwestover.dev/post/2018/05/create-a-basic-multiplayer-game-in-phaser-3-with-socket-io-part-2/</guid><description>My new Phaser 3 tutorial on making a multiplayer game in Phaser 3 is finally live on Game Dev Academy. This is the second part of the multiplayer tutorial.
In this tuorial, we pick up were we left in part 1, and we start adding the client side logic for adding players to our game. We then move on by adding the logic for player input and finally we wrap up the game by adding some collectables for the players to collect.</description></item><item><title>Create A Basic Multiplayer Game In Phaser 3 With Socket.io – Part 1 Tutorial</title><link>https://scottwestover.dev/post/2018/04/create-a-basic-multiplayer-game-in-phaser-3-with-socket-io-part-1/</link><pubDate>Wed, 25 Apr 2018 21:34:18 +0000</pubDate><guid>https://scottwestover.dev/post/2018/04/create-a-basic-multiplayer-game-in-phaser-3-with-socket-io-part-1/</guid><description>My new Phaser 3 tutorial on making a multiplayer game in Phaser 3 is finally live on Game Dev Academy. This is the first part of the tutorial.
In this tuorial, I show you how to create a simple multiplayer game by using NodeJS and SocketIO. I start by showing you how to setup your Node server, rendering your Phaser game, and then finally we add SocketIO to the project.</description></item><item><title>Phaser3 - Create a simple preloader</title><link>https://scottwestover.dev/post/2018/02/phaser3-create-a-simple-preloader/</link><pubDate>Wed, 14 Feb 2018 17:45:42 +0000</pubDate><guid>https://scottwestover.dev/post/2018/02/phaser3-create-a-simple-preloader/</guid><description>With the official release of Phaser 3 this week, and Phaser 2 games not working on Phaser 3, it would be a great time to start using Phaser 3. In this tutorial, I am going to show you how to make a simple preloader in Phaser 3.
For this tutorial, we are going to keep things simple, and just put all of our code in our HTML file. To get started, we need to create an index.</description></item><item><title>Unity 2D Snake Tutorial Part 1</title><link>https://scottwestover.dev/post/2017/12/unity-2d-snake-tutorial-part-1/</link><pubDate>Fri, 01 Dec 2017 23:32:18 +0000</pubDate><guid>https://scottwestover.dev/post/2017/12/unity-2d-snake-tutorial-part-1/</guid><description>For this tutorial we are going to make a simple 2D snake game in Unity. If you are not familiar with the classic arcade game Snake, it is a game that was originally created in the 1970's, and it gained a lot of popularity when it was included on Nokia phones. The game itself has a few variants.
For this tutorial, the main objective of the game is to eat as many apples as you can without running into the any of the walls, obstacles, or yourself.</description></item><item><title>How To Connect To The Engagement History API Through Postman</title><link>https://scottwestover.dev/post/2016/10/2016-10-29-how-to-connect-to-engagement-history/</link><pubDate>Sat, 29 Oct 2016 00:00:00 +0000</pubDate><guid>https://scottwestover.dev/post/2016/10/2016-10-29-how-to-connect-to-engagement-history/</guid><description>I have gotten a lot of request from people on how to connect to the APIs that are available from LivePerson using Postman, so I decided to share how to do this here.
In order to follow along with this tutorial, you will need the API keys that are available for Engagement History API, and you will need access to the Postman App. To get these keys, you can log into the LiveEngage console, and grab them from them from the API tab under data sources, which is on the campaigns tab.</description></item><item><title>LiveEngage - Use Your Own Custom Chat Button By Using JQuery</title><link>https://scottwestover.dev/post/2016/01/2016-01-13-liveengage-use-your-own-custom-chat/</link><pubDate>Wed, 13 Jan 2016 00:00:00 +0000</pubDate><guid>https://scottwestover.dev/post/2016/01/2016-01-13-liveengage-use-your-own-custom-chat/</guid><description>Update: With the new HTML engagements in LiveEngage, this method is now outdated. It is recommended that you use the supported method listed above.
The purpose of this tutorial is to show you how you can use your own chat buttons with LiveEngage by using JavaScript.
Currently in LiveEngage, you have a limited number of options for creating a chat button in the LiveEngage studio. This can make it hard for the chat button to match the look of your site, especially with all of the things you can do with CSS and JavaScript today.</description></item><item><title>LiveEngage - Connecting To The Engagement History API In Java Tutorial</title><link>https://scottwestover.dev/post/2015/12/2015-12-16-liveengage-connecting-to-engagement/</link><pubDate>Wed, 16 Dec 2015 00:00:00 +0000</pubDate><guid>https://scottwestover.dev/post/2015/12/2015-12-16-liveengage-connecting-to-engagement/</guid><description>The purpose of this tutorial is to show you how to connect to the Engagement History API in Java.
The Engagement History API is a REST API that is offered through LivePerson that allows you to pull your chat transcripts without having to manually go through and export them. In order to connect to the API, you will need to get a set of API keys from LivePerson and install them on your account.</description></item><item><title>LiveEngage Best Practice - Multitasking With Hot Keys</title><link>https://scottwestover.dev/post/2015/12/2015-12-01-liveengage-best-practice-multitasking/</link><pubDate>Tue, 01 Dec 2015 00:00:00 +0000</pubDate><guid>https://scottwestover.dev/post/2015/12/2015-12-01-liveengage-best-practice-multitasking/</guid><description>One of the main things that I usually hear from agents is that they are always multitasking and that they are looking for ways to be more efficient when they are chatting, so they can provide the best experience possible to the customers that they are chatting with. My response to the client is, “Are you utilizing the hot keys that are available in LiveEngage?”
Hot keys are shortcuts that are available to you in LiveEngage that you can use to easily move between tasks such taking a chat, changing your status, or even viewing the visitor list.</description></item><item><title>LiveEngage - Using CSS To Modify Embedded Chat Buttons</title><link>https://scottwestover.dev/post/2015/11/2015-11-25-liveengage-using-css-to-modify-embedded/</link><pubDate>Wed, 25 Nov 2015 00:00:00 +0000</pubDate><guid>https://scottwestover.dev/post/2015/11/2015-11-25-liveengage-using-css-to-modify-embedded/</guid><description>Update: With the new HTML engagements in LiveEngage, this method is now outdated. It is recommended that you use the supported method listed above.
The purpose of this tutorial is to show you how to use your own custom CSS to modify your embedded chat buttons from LiveEngage.
Currently in LiveEngage, the only options you have for an embedded button is to use an image or the few text styling elements that are available in the engagement studio.</description></item><item><title>LiveEngage - Use The Web App SDK To Send Chat Lines To The Agent Console</title><link>https://scottwestover.dev/post/2015/11/2015-11-19-liveengage-use-web-app-sdk-to-send-chat/</link><pubDate>Thu, 19 Nov 2015 00:00:00 +0000</pubDate><guid>https://scottwestover.dev/post/2015/11/2015-11-19-liveengage-use-web-app-sdk-to-send-chat/</guid><description>The purpose of this tutorial is to show you how to use the Web Application SDK to send chat lines from your own web application.
The Web Application SDK is a client-side package that can be used to communicate with the LivePerson Agent Workspace. In order to use the SDK, your web application needs to be able to open inside an iFrame, and your application must be hosted over SSL. You can read more about the SDK here: Web App SDK PDF</description></item><item><title>LiveEngage - Use URL To Pre-fill Your Account ID On The Login Page</title><link>https://scottwestover.dev/post/2015/11/2015-11-04-liveengage-use-url-to-pre-fill-your/</link><pubDate>Wed, 04 Nov 2015 00:00:00 +0000</pubDate><guid>https://scottwestover.dev/post/2015/11/2015-11-04-liveengage-use-url-to-pre-fill-your/</guid><description>On the LiveEngage login page, there is a &amp;lsquo;remember me&amp;rsquo; check box that you can check to have your information stored in a cookie, however this is not always a valid option for everyone. For example, if your computer automatically clears your cookies and cache every night, or if you have cookies disabled, then the &amp;lsquo;remember me&amp;rsquo; check box will not remember your information, which then requires you to enter your account number, username, and password every time you want to login.</description></item><item><title>LiveEngage - Remove Cancel &amp; Submit Buttons From Offline Survey</title><link>https://scottwestover.dev/post/2015/10/2015-10-23-liveengage-remove-cancel-submit-buttons/</link><pubDate>Fri, 23 Oct 2015 00:00:00 +0000</pubDate><guid>https://scottwestover.dev/post/2015/10/2015-10-23-liveengage-remove-cancel-submit-buttons/</guid><description>Update: This method is now outdated. Now, in LiveEngage, when you create a new survey with no questions, it will automatically remove the Submit button from the survey.
The purpose of this tutorial is to show you how to remove the Cancel &amp;amp; Submit buttons from your offline survey in LiveEngage.
The default offline survey in LiveEngage is nice, but sometimes you want added functionality that is not there, or sometimes you want to display your own custom offline message, but you do not want the customers to leave an offline message using the LiveEngage chat.</description></item><item><title>LiveEngage - Custom Offline Message With Link To Your Leave A Message Form</title><link>https://scottwestover.dev/post/2015/10/2015-10-19-liveengage-custom-offline-message-with/</link><pubDate>Mon, 19 Oct 2015 00:00:00 +0000</pubDate><guid>https://scottwestover.dev/post/2015/10/2015-10-19-liveengage-custom-offline-message-with/</guid><description>Update 6/10/16: This work around is no longer needed for LiveEngage. Instead, if you just include your message in the header of the survey, and delete all questions of the offline survey. The header will show correctly with a close button for the offline survey.
The purpose of this tutorial is to show you how to add your own custom offline message on the offline survey in LiveEngage, and have a link to your own leave a message form.</description></item><item><title>Create A Chrome Extension Tutorial</title><link>https://scottwestover.dev/post/2015/09/2015-09-07-create-chrome-extension-tutorial/</link><pubDate>Mon, 07 Sep 2015 00:00:00 +0000</pubDate><guid>https://scottwestover.dev/post/2015/09/2015-09-07-create-chrome-extension-tutorial/</guid><description>The purpose of this tutorial is to show you how to make a simple Chrome Extension. Throughout this tutorial we will be making a simple extension that when clicked, will show an HTML page with the text &amp;ldquo;Hello World!&amp;rdquo;.
A Chrome Extension is just some basic HTML, CSS, and JavaScript that allows you to add some type of functionality to Chrome by using Chrome&amp;rsquo;s JavaScript APIs. For this tutorial, we are going to focus on building a simple Hello World html page that uses basic JavaScript.</description></item><item><title>Android - Adding A Facebook Share Button That Shares A Screen Shot</title><link>https://scottwestover.dev/post/2015/07/2015-07-14-android-adding-facebook-share-button/</link><pubDate>Tue, 14 Jul 2015 00:00:00 +0000</pubDate><guid>https://scottwestover.dev/post/2015/07/2015-07-14-android-adding-facebook-share-button/</guid><description>The purpose of this tutorial is to show you how to add a Facebook Share button to your Android Application that will share a screen shot. I have added a new tutorial that shows just how to add a basic share button to your android application. You can read the tutorial here: Android - Add A Facebook Share Button
For this tutorial I was using: Android Studio 1.1.0, and Facebook SDK v4.</description></item><item><title>Android Facebook Integration Tutorial</title><link>https://scottwestover.dev/post/2015/07/2015-07-12-android-facebook-integration-tutorial/</link><pubDate>Sun, 12 Jul 2015 00:00:00 +0000</pubDate><guid>https://scottwestover.dev/post/2015/07/2015-07-12-android-facebook-integration-tutorial/</guid><description>The purpose of this tutorial is to show you how to integrate the Facebook SDK with your Android application. Throughout this tutorial, we will register our application with Facebook and then add the SDK to our project.
For this tutorial I was using: Android Studio 1.1.0, OpenSSL for Windows, and Facebook SDK v4.0.0. You should be able to follow along with other versions of this software.
In order to follow along you will need the following:</description></item><item><title>Using GitHub To Share Your Code Tutorial</title><link>https://scottwestover.dev/post/2015/04/2015-04-14-using-github-to-share-your-code-tutorial/</link><pubDate>Tue, 14 Apr 2015 00:00:00 +0000</pubDate><guid>https://scottwestover.dev/post/2015/04/2015-04-14-using-github-to-share-your-code-tutorial/</guid><description>The purpose of this tutorial is to show you how to use GitHub to share your code with others.
For this tutorial we will be using GitHub for Windows. This tutorial does not go into full detail, but does provide all the steps that are needed for learning purposes.
In order to follow along with this tutorial, you will need to install GitHub for Windows. You can download the program from here: https://windows.</description></item><item><title>AEM Tutorial On Building A Sightly Page Component</title><link>https://scottwestover.dev/post/2015/04/2015-04-10-aem-tutorial-on-building-sightly-page/</link><pubDate>Fri, 10 Apr 2015 00:00:00 +0000</pubDate><guid>https://scottwestover.dev/post/2015/04/2015-04-10-aem-tutorial-on-building-sightly-page/</guid><description>The purpose of this tutorial is to show you how to build an AEM page component using sightly. You can read more about sightly here: Sightly
For this tutorial we will be using crxde lite. This tutorial does not go into full detail, but does provide all the code that was used in the creation of this component for learning purposes.
For this tutorial I was using: AEM 6.0. You should be able to follow along with other versions of this software.</description></item><item><title>AEM CQ:Listeners Node Tutorial</title><link>https://scottwestover.dev/post/2015/03/2015-03-19-aem-cqlisteners-node-tutorial/</link><pubDate>Thu, 19 Mar 2015 00:00:00 +0000</pubDate><guid>https://scottwestover.dev/post/2015/03/2015-03-19-aem-cqlisteners-node-tutorial/</guid><description>The purpose of this tutorial is to show you how to add the &amp;ldquo;cq:listeners&amp;rdquo; node to a component so when the component is modified the page will automatically refresh. You can read more about &amp;ldquo;cq:listeners&amp;rdquo; from a previous post I made here: cq:listeners node
For this tutorial we will be using crxde lite. This tutorial does not go into full detail, but does provide all the code that was used in the creation of this component for learning purposes.</description></item><item><title>AEM ShareThis Component Tutorial</title><link>https://scottwestover.dev/post/2015/03/2015-03-17-aem-sharethis-component-tutorial/</link><pubDate>Tue, 17 Mar 2015 00:00:00 +0000</pubDate><guid>https://scottwestover.dev/post/2015/03/2015-03-17-aem-sharethis-component-tutorial/</guid><description>The purpose of this tutorial is to create an AEM Component that uses the ShareThis plugin that will allow users to share your content easily. For this tutorial we will be using crxde lite. This tutorial does not go into full detail, but does provide all the code that was used in the creation of this component for learning purposes.
For this tutorial I was using: AEM 6.0. You should be able to follow along with other versions of this software.</description></item><item><title>AEM Basic Project Setup Tutorial</title><link>https://scottwestover.dev/post/2015/03/2015-03-16-aem-basic-project-setup-tutorial/</link><pubDate>Mon, 16 Mar 2015 00:00:00 +0000</pubDate><guid>https://scottwestover.dev/post/2015/03/2015-03-16-aem-basic-project-setup-tutorial/</guid><description>The purpose of this tutorial is to show you how to set up a basic project structure in AEM. For this tutorial we will be using crxde lite. This tutorial does not go into full detail, but does provide all the code that was used in the creation of this project for learning purposes.
For this tutorial I was using AEM 6.0. You should be able to follow along with other versions of this software.</description></item><item><title>AEM Brackets Extension Tutorial</title><link>https://scottwestover.dev/post/2015/03/2015-03-14-aem-brackets-extension-tutorial/</link><pubDate>Sat, 14 Mar 2015 00:00:00 +0000</pubDate><guid>https://scottwestover.dev/post/2015/03/2015-03-14-aem-brackets-extension-tutorial/</guid><description>The purpose of this tutorial is to install the AEM Sightly Brackets Extension and see how easy it is to transfer content back and forth between Brackets and your local instance of AEM.
For this tutorial I was using: AEM 6.0, AEM Brackets Extension 0.0.12, and Brackets 1.1. You should be able to follow along with other versions of this software.
In order to follow along you will need the following:</description></item><item><title>AEM Component To Send An Email Tutorial</title><link>https://scottwestover.dev/post/2015/03/2015-03-06-aem-component-to-send-email-tutorial/</link><pubDate>Fri, 06 Mar 2015 00:00:00 +0000</pubDate><guid>https://scottwestover.dev/post/2015/03/2015-03-06-aem-component-to-send-email-tutorial/</guid><description>The purpose of this tutorial is create a component for AEM that will send an email and then display a confirmation message. This is accomplished by using the ACS AEM Commons Email API. The ACS AEM Commons package adds a lot of features to the out of the box AEM implementation. For the purpose of this tutorial we will be creating the component in crxde lite. This tutorial does not go into full detail, but does provide all of the code that was used in the creation of this component for learning purposes.</description></item><item><title>AEM Component To Display X3D File Tutorial</title><link>https://scottwestover.dev/post/2015/03/2015-03-02-aem-component-to-dispaly-x3d-file/</link><pubDate>Mon, 02 Mar 2015 00:00:00 +0000</pubDate><guid>https://scottwestover.dev/post/2015/03/2015-03-02-aem-component-to-dispaly-x3d-file/</guid><description>The purpose of this tutorial is to develop a component for AEM, which will allow you to display 3D models. This is accomplished by loading in an X3D file and then displaying it on your webpage. For this tutorial we will be creating the component in crxde lite. This tutorial does not go into full detail, but does provide all of the code that was used in the creation of this component for learning purposes.</description></item></channel></rss>