<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>HTML5 on Scott Westover</title><link>https://scottwestover.dev/tags/html5/</link><description>Recent content in HTML5 on Scott Westover</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 27 Aug 2024 08:00:02 +0000</lastBuildDate><atom:link href="https://scottwestover.dev/tags/html5/index.xml" rel="self" type="application/rss+xml"/><item><title>Solitaire HTML5 Game Tutorial With Phaser 3 Part 2: Game Layout</title><link>https://scottwestover.dev/post/2024/08/solitaire-phaser-3-tutorial-2/</link><pubDate>Tue, 27 Aug 2024 08:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2024/08/solitaire-phaser-3-tutorial-2/</guid><description>In this tutorial series, we’ll be looking at how to recreate the game Solitaire using the Phaser 3 framework. Here’s an example of what the final game should look like:
Previously, in part 1 , we reviewed the rules and game play of the game Solitaire, setup our project files, and loaded in the assets we will need for our game.
In part 2 of this series, we are going to start building out the layout of our game.</description></item><item><title>Solitaire HTML5 Game Tutorial With Phaser 3 Part 1: Project Setup</title><link>https://scottwestover.dev/post/2024/08/solitaire-phaser-3-tutorial-1/</link><pubDate>Mon, 26 Aug 2024 08:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2024/08/solitaire-phaser-3-tutorial-1/</guid><description>The game of Solitaire is a fun classic single player card game that involves strategy, patience, and sometimes a bit of luck. The card game involves arranging cards in a specific order based on suit and rank, and the goal is to move all the cards from the tableau (the main playing area) into a set of foundations (four piles), each starting with an Ace and building up in ascending order to a King.</description></item><item><title>Simple Dependency Injection In Phaser 3 (Video)</title><link>https://scottwestover.dev/post/2023/05/simple-dependency-injection-in-phaser-3-video/</link><pubDate>Thu, 18 May 2023 16:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2023/05/simple-dependency-injection-in-phaser-3-video/</guid><description>If you are interested in learning how to implement simple dependency injection in Phaser 3, you should check out this new video that I released on YouTube: Effortless Phaser 3 Development with Simple Dependency Injection.
I hope you enjoy the new content! Please feel free to post any questions or comments below.</description></item><item><title>Build A Connect Four Library In TypeScript - Part 5 (Video)</title><link>https://scottwestover.dev/post/2023/05/build-a-connect-four-library-in-typescript-part-5-video/</link><pubDate>Thu, 11 May 2023 16:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2023/05/build-a-connect-four-library-in-typescript-part-5-video/</guid><description>If you are interested in learning how to create a reusable Connect Four library in TypeScript, then you should check out the fifth video in my new series that I released on YouTube: Building a Connect Four Library in TypeScript - Step by Step Guide - Part 5.
If you prefer a written tutorial, then you can find the same content here on my blog: Build A Connect Four Library In TypeScript - Part 5 .</description></item><item><title>Build A Connect Four Library In TypeScript - Part 4 (Video)</title><link>https://scottwestover.dev/post/2023/05/build-a-connect-four-library-in-typescript-part-4-video/</link><pubDate>Thu, 04 May 2023 16:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2023/05/build-a-connect-four-library-in-typescript-part-4-video/</guid><description>If you are interested in learning how to create a reusable Connect Four library in TypeScript, then you should check out the fourth video in my new series that I released on YouTube: Building a Connect Four Library in TypeScript - Step by Step Guide - Part 4.
If you prefer a written tutorial, then you can find the same content here on my blog: Build A Connect Four Library In TypeScript - Part 4 .</description></item><item><title>Quick &amp; Easy Game State Saving with JavaScript &amp; LocalStorage Video</title><link>https://scottwestover.dev/post/2023/04/quick-and-easy-game-state-saving-with-javascript-and-localstorage/</link><pubDate>Sun, 23 Apr 2023 12:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2023/04/quick-and-easy-game-state-saving-with-javascript-and-localstorage/</guid><description>If you are interested in learning how you can easily use JavaScript and the browser LocalStorage to easily and quickly save your game state, then you should check out the third video in my new series that I released on YouTube: Quick &amp;amp; Easy Game State Saving with JavaScript &amp;amp; LocalStorage!.
I hope you enjoy the new content! Please feel free to post any questions or comments below.</description></item><item><title>Build A Connect Four Library In TypeScript - Part 3 (Video)</title><link>https://scottwestover.dev/post/2023/04/build-a-connect-four-library-in-typescript-part-3-video/</link><pubDate>Mon, 10 Apr 2023 06:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2023/04/build-a-connect-four-library-in-typescript-part-3-video/</guid><description>If you are interested in learning how to create a reusable Connect Four library in TypeScript, then you should check out the third video in my new series that I released on YouTube: Building a Connect Four Library in TypeScript - Step by Step Guide - Part 3.
If you prefer a written tutorial, then you can find the same content here on my blog: Build A Connect Four Library In TypeScript - Part 3 .</description></item><item><title>Phaser 3 Inter Scene Communication Tutorial Video</title><link>https://scottwestover.dev/post/2023/03/phaser-3-inter-scene-communication-tutorial-video/</link><pubDate>Sun, 12 Mar 2023 18:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2023/03/phaser-3-inter-scene-communication-tutorial-video/</guid><description>If you are interested in learning how you can easily communicate between Scenes in Phaser 3 by using the Phaser 3 EventEmitter, then you should check out the third video in my new series that I released on YouTube: Phaser 3 Tutorial: Inter-Scene Communication Made Easy!.
I hope you enjoy the new content! Please feel free to post any questions or comments below.</description></item><item><title>Creating a Zelda-Style Health Bar in Phaser 3 - Tutorial Video</title><link>https://scottwestover.dev/post/2023/03/creating-a-zelda-style-health-bar-in-phaser-3-tutorial-video/</link><pubDate>Tue, 07 Mar 2023 18:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2023/03/creating-a-zelda-style-health-bar-in-phaser-3-tutorial-video/</guid><description>If you are interested in learning how to create a simple health bar in Phaser 3 to look like the health bars from games like the Legend of Zelda!, then you should check out the third video in my new series that I released on YouTube: Creating a Zelda-Style Health Bar in Phaser 3 - Tutorial.
I hope you enjoy the new content! Please feel free to post any questions or comments below.</description></item><item><title>Build A Connect Four Library In TypeScript - Part 2 (Video)</title><link>https://scottwestover.dev/post/2023/02/build-a-connect-four-library-in-typescript-part-2-video/</link><pubDate>Mon, 27 Feb 2023 06:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2023/02/build-a-connect-four-library-in-typescript-part-2-video/</guid><description>If you are interested in learning how to create a reusable Connect Four library in TypeScript, then you should check out the second video in my new series that I released on YouTube earlier today: Building a Connect Four Library in TypeScript - Step by Step Guide - Part 2.
If you prefer a written tutorial, then you can find the same content here on my blog: Build A Connect Four Library In TypeScript - Part 2 .</description></item><item><title>Build A Connect Four Library In TypeScript - Part 1 (Video)</title><link>https://scottwestover.dev/post/2023/02/build-a-connect-four-library-in-typescript-part-1-video/</link><pubDate>Thu, 23 Feb 2023 06:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2023/02/build-a-connect-four-library-in-typescript-part-1-video/</guid><description>If you are interested in learning how to create a reusable Connect Four library in TypeScript, then you should check out my new video that I released on YouTube earlier today: Building a Connect Four Library in TypeScript - Step by Step Guide - Part 1.
If you prefer a written tutorial, then you can find the same content here on my blog: Build A Connect Four Library In TypeScript - Part 1 .</description></item><item><title>Build A Connect Four Library In TypeScript - Part 5</title><link>https://scottwestover.dev/post/2023/02/build-a-connect-four-library-in-typescript-part-5/</link><pubDate>Tue, 07 Feb 2023 06:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2023/02/build-a-connect-four-library-in-typescript-part-5/</guid><description>In this series, we will go over how to create a reusable TypeScript class that can be used to build the game Connect Four, and in a future series we will see how we can use this library to create implementations of the Connect Four game for the CLI and the web.
Previously, in part 4 , we finished updating the logic for checking if a player won the game by getting a Connect Four.</description></item><item><title>Build A Connect Four Library In TypeScript - Part 4</title><link>https://scottwestover.dev/post/2023/02/build-a-connect-four-library-in-typescript-part-4/</link><pubDate>Fri, 03 Feb 2023 06:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2023/02/build-a-connect-four-library-in-typescript-part-4/</guid><description>In this series, we will go over how to create a reusable TypeScript class that can be used to build the game Connect Four, and in a future series we will see how we can use this library to create implementations of the Connect Four game for the CLI and the web.
Previously, in part 3 , we added the logic for allowing the player to place a game piece in a column, logic for validating this move, and we started adding the logic for if the game is over.</description></item><item><title>Build A Connect Four Library In TypeScript - Part 3</title><link>https://scottwestover.dev/post/2023/01/build-a-connect-four-library-in-typescript-part-3/</link><pubDate>Fri, 20 Jan 2023 06:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2023/01/build-a-connect-four-library-in-typescript-part-3/</guid><description>In this series, we will go over how to create a reusable TypeScript class that can be used to build the game Connect Four, and in a future series we will see how we can use this library to create implementations of the Connect Four game for the CLI and the web.
Previously, in part 2 , we added the initial game initialization logic, the ability to reset the game state, and we then learned how we could test our code using the uvu framework.</description></item><item><title>Build A Connect Four Library In TypeScript - Part 2</title><link>https://scottwestover.dev/post/2023/01/build-a-connect-four-library-in-typescript-part-2/</link><pubDate>Tue, 17 Jan 2023 06:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2023/01/build-a-connect-four-library-in-typescript-part-2/</guid><description>In this series, we will go over how to create a reusable TypeScript class that can be used to build the game Connect Four, and in a future series we will see how we can use this library to create implementations of the Connect Four game for the CLI and the web.
Previously, in part 1 , we reviewed the rules and game play of the game Connect Four and we started to build out the initial ConnectFour class by adding the properties and methods that will be needed.</description></item><item><title>Build A Connect Four Library In TypeScript - Part 1</title><link>https://scottwestover.dev/post/2023/01/build-a-connect-four-library-in-typescript-part-1/</link><pubDate>Sun, 15 Jan 2023 06:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2023/01/build-a-connect-four-library-in-typescript-part-1/</guid><description>In this series, we will go over how to create a reusable TypeScript class that can be used to build the game Connect Four, and in a future series we will see how we can use this library to create implementations of the Connect Four game for the CLI and the web.
In part 1 of this series, we are going to review the rules and game play of the game Connect Four and we will start to build out the initial ConnectFour class by adding the properties and methods that will be needed.</description></item><item><title>HTML5 Game Development - Project Setup</title><link>https://scottwestover.dev/post/2022/09/html5-game-development-project-setup/</link><pubDate>Thu, 01 Sep 2022 06:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2022/09/html5-game-development-project-setup/</guid><description>Before we start learning about HTML5 Canvas and start writing any code, the first thing we need to do is setup a development environment that will allow us to easily edit our files, serve our static files on a local web server, and view our changes in real time as we make them.
For this series, we will be trying to keep things as simple as possible, so we will not be using things like node, npm, webpack, vite, etc.</description></item><item><title>HTML5 Game Development - Tutorial Series Announcement</title><link>https://scottwestover.dev/post/2022/08/html5-game-development-tutorial-series-announcement/</link><pubDate>Tue, 30 Aug 2022 06:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2022/08/html5-game-development-tutorial-series-announcement/</guid><description>Today, I wanted to introduce a new series that I will begin working on that will be focusing on creating games with pure JavaScript and rendered on HTML using the HTML Canvas element . This series will focus on step by step tutorials for learning the basics of working with the HTML Canvas elements for game development and then we will move on to creating games.
As we progress through the series, we will be building blocks of re-usable code that you will be able to use to create your own games.</description></item><item><title>HTML5 Game Prototyping Course - Part 1</title><link>https://scottwestover.dev/post/2022/04/html5-game-prototyping-course-part-1/</link><pubDate>Mon, 25 Apr 2022 00:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2022/04/html5-game-prototyping-course-part-1/</guid><description>Welcome everyone! This is the first of many posts that will cover the topic of game prototyping and we will be putting game prototyping into practice by building some basic games in HTML5 using TypeScript.
What is game prototyping? In game design, game prototyping is the process by which a game designer builds the simplest version of their game in order to test their idea and get feedback. A good prototype will convey the mechanics of the game the designer wants to build and it will allow others to test the gameplay.</description></item></channel></rss>