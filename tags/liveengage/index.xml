<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>LiveEngage on Scott Westover</title><link>https://scottwestover.dev/tags/liveengage/</link><description>Recent content in LiveEngage on Scott Westover</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 29 Oct 2016 00:00:00 +0000</lastBuildDate><atom:link href="https://scottwestover.dev/tags/liveengage/index.xml" rel="self" type="application/rss+xml"/><item><title>How To Connect To The Engagement History API Through Postman</title><link>https://scottwestover.dev/post/2016/10/2016-10-29-how-to-connect-to-engagement-history/</link><pubDate>Sat, 29 Oct 2016 00:00:00 +0000</pubDate><guid>https://scottwestover.dev/post/2016/10/2016-10-29-how-to-connect-to-engagement-history/</guid><description>I have gotten a lot of request from people on how to connect to the APIs that are available from LivePerson using Postman, so I decided to share how to do this here.
In order to follow along with this tutorial, you will need the API keys that are available for Engagement History API, and you will need access to the Postman App. To get these keys, you can log into the LiveEngage console, and grab them from them from the API tab under data sources, which is on the campaigns tab.</description></item><item><title>Querying The Engagement History API With Firefox RESTClient</title><link>https://scottwestover.dev/post/2016/05/2016-05-14-querying-engagement-history-api-with/</link><pubDate>Sat, 14 May 2016 00:00:00 +0000</pubDate><guid>https://scottwestover.dev/post/2016/05/2016-05-14-querying-engagement-history-api-with/</guid><description>The Engagement History API is an API that is available from LivePerson, and it allows for you to search, filter, and keep copies of chat transcripts and the related data, such as visitor information, agent information, and much more.
Before writing any code to start querying the API, it can be useful to use a tool that will allow for you to connect to the API in seconds.
This article discusses how you can use the RESTClient query to the Engagement History API.</description></item><item><title>LiveEngage - Engagement History API Program To Send Email</title><link>https://scottwestover.dev/post/2016/02/2016-02-10-liveengage-engagement-history-api/</link><pubDate>Wed, 10 Feb 2016 00:00:00 +0000</pubDate><guid>https://scottwestover.dev/post/2016/02/2016-02-10-liveengage-engagement-history-api/</guid><description>Today I wanted to share with you a program I made that will allow you to use the Engagement History API to send out emails for transcripts that have a particular keyword.
The program will use the API to pull all of your chat transcripts for the previous day that contain a certain keyword, and then it will send it to an email address that you specify. The program makes use of the SendGrid API in order to send the emails.</description></item><item><title>LiveEngage - Use Your Own Custom Chat Button By Using JQuery</title><link>https://scottwestover.dev/post/2016/01/2016-01-13-liveengage-use-your-own-custom-chat/</link><pubDate>Wed, 13 Jan 2016 00:00:00 +0000</pubDate><guid>https://scottwestover.dev/post/2016/01/2016-01-13-liveengage-use-your-own-custom-chat/</guid><description>Update: With the new HTML engagements in LiveEngage, this method is now outdated. It is recommended that you use the supported method listed above.
The purpose of this tutorial is to show you how you can use your own chat buttons with LiveEngage by using JavaScript.
Currently in LiveEngage, you have a limited number of options for creating a chat button in the LiveEngage studio. This can make it hard for the chat button to match the look of your site, especially with all of the things you can do with CSS and JavaScript today.</description></item><item><title>LiveEngage - Connecting To The Engagement History API In Java Tutorial</title><link>https://scottwestover.dev/post/2015/12/2015-12-16-liveengage-connecting-to-engagement/</link><pubDate>Wed, 16 Dec 2015 00:00:00 +0000</pubDate><guid>https://scottwestover.dev/post/2015/12/2015-12-16-liveengage-connecting-to-engagement/</guid><description>The purpose of this tutorial is to show you how to connect to the Engagement History API in Java.
The Engagement History API is a REST API that is offered through LivePerson that allows you to pull your chat transcripts without having to manually go through and export them. In order to connect to the API, you will need to get a set of API keys from LivePerson and install them on your account.</description></item><item><title>LiveEngage Best Practice - Multitasking With Hot Keys</title><link>https://scottwestover.dev/post/2015/12/2015-12-01-liveengage-best-practice-multitasking/</link><pubDate>Tue, 01 Dec 2015 00:00:00 +0000</pubDate><guid>https://scottwestover.dev/post/2015/12/2015-12-01-liveengage-best-practice-multitasking/</guid><description>One of the main things that I usually hear from agents is that they are always multitasking and that they are looking for ways to be more efficient when they are chatting, so they can provide the best experience possible to the customers that they are chatting with. My response to the client is, “Are you utilizing the hot keys that are available in LiveEngage?”
Hot keys are shortcuts that are available to you in LiveEngage that you can use to easily move between tasks such taking a chat, changing your status, or even viewing the visitor list.</description></item><item><title>LiveEngage - Using CSS To Modify Embedded Chat Buttons</title><link>https://scottwestover.dev/post/2015/11/2015-11-25-liveengage-using-css-to-modify-embedded/</link><pubDate>Wed, 25 Nov 2015 00:00:00 +0000</pubDate><guid>https://scottwestover.dev/post/2015/11/2015-11-25-liveengage-using-css-to-modify-embedded/</guid><description>Update: With the new HTML engagements in LiveEngage, this method is now outdated. It is recommended that you use the supported method listed above. The purpose of this tutorial is to show you how to use your own custom CSS to modify your embedded chat buttons from LiveEngage.
Currently in LiveEngage, the only options you have for an embedded button is to use an image or the few text styling elements that are available in the engagement studio.</description></item><item><title>LiveEngage - Use The Web App SDK To Send Chat Lines To The Agent Console</title><link>https://scottwestover.dev/post/2015/11/2015-11-19-liveengage-use-web-app-sdk-to-send-chat/</link><pubDate>Thu, 19 Nov 2015 00:00:00 +0000</pubDate><guid>https://scottwestover.dev/post/2015/11/2015-11-19-liveengage-use-web-app-sdk-to-send-chat/</guid><description>The purpose of this tutorial is to show you how to use the Web Application SDK to send chat lines from your own web application.
The Web Application SDK is a client-side package that can be used to communicate with the LivePerson Agent Workspace. In order to use the SDK, your web application needs to be able to open inside an iFrame, and your application must be hosted over SSL. You can read more about the SDK here: Web App SDK PDF</description></item><item><title>LiveEngage - Chat Transcript XML Parsing Tool</title><link>https://scottwestover.dev/post/2015/11/2015-11-13-liveengage-chat-transcript-xml-parsing/</link><pubDate>Fri, 13 Nov 2015 00:00:00 +0000</pubDate><guid>https://scottwestover.dev/post/2015/11/2015-11-13-liveengage-chat-transcript-xml-parsing/</guid><description>Today I wanted to share with you a XML Chat Transcript Parsing tool that I created to parse the chat transcripts that you can export from LiveEngage.
Inside LiveEngage, there is no easy way to see/analyze the chat transcripts without going through them one at a time. One of the options that is available to you, is you are able to export the transcripts as a text file or as xml file.</description></item><item><title>LiveEngage - Use URL To Pre-fill Your Account ID On The Login Page</title><link>https://scottwestover.dev/post/2015/11/2015-11-04-liveengage-use-url-to-pre-fill-your/</link><pubDate>Wed, 04 Nov 2015 00:00:00 +0000</pubDate><guid>https://scottwestover.dev/post/2015/11/2015-11-04-liveengage-use-url-to-pre-fill-your/</guid><description>On the LiveEngage login page, there is a &amp;lsquo;remember me&amp;rsquo; check box that you can check to have your information stored in a cookie, however this is not always a valid option for everyone. For example, if your computer automatically clears your cookies and cache every night, or if you have cookies disabled, then the &amp;lsquo;remember me&amp;rsquo; check box will not remember your information, which then requires you to enter your account number, username, and password every time you want to login.</description></item><item><title>LiveEngage - Remove Cancel &amp; Submit Buttons From Offline Survey</title><link>https://scottwestover.dev/post/2015/10/2015-10-23-liveengage-remove-cancel-submit-buttons/</link><pubDate>Fri, 23 Oct 2015 00:00:00 +0000</pubDate><guid>https://scottwestover.dev/post/2015/10/2015-10-23-liveengage-remove-cancel-submit-buttons/</guid><description>Update: This method is now outdated. Now, in LiveEngage, when you create a new survey with no questions, it will automatically remove the Submit button from the survey.
The purpose of this tutorial is to show you how to remove the Cancel &amp;amp; Submit buttons from your offline survey in LiveEngage.
The default offline survey in LiveEngage is nice, but sometimes you want added functionality that is not there, or sometimes you want to display your own custom offline message, but you do not want the customers to leave an offline message using the LiveEngage chat.</description></item><item><title>LiveEngage - Custom Offline Message With Link To Your Leave A Message Form</title><link>https://scottwestover.dev/post/2015/10/2015-10-19-liveengage-custom-offline-message-with/</link><pubDate>Mon, 19 Oct 2015 00:00:00 +0000</pubDate><guid>https://scottwestover.dev/post/2015/10/2015-10-19-liveengage-custom-offline-message-with/</guid><description>Update 6/10/16: This work around is no longer needed for LiveEngage. Instead, if you just include your message in the header of the survey, and delete all questions of the offline survey. The header will show correctly with a close button for the offline survey.
The purpose of this tutorial is to show you how to add your own custom offline message on the offline survey in LiveEngage, and have a link to your own leave a message form.</description></item></channel></rss>