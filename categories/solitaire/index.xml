<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Solitaire on Scott Westover</title><link>https://scottwestover.dev/categories/solitaire/</link><description>Recent content in Solitaire on Scott Westover</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 04 May 2023 16:00:02 +0000</lastBuildDate><atom:link href="https://scottwestover.dev/categories/solitaire/index.xml" rel="self" type="application/rss+xml"/><item><title>Solitaire HTML5 Game Tutorial With Phaser 3 Part 1: Project Setup</title><link>https://scottwestover.dev/post/2024/08/solitaire-phaser-3-tutorial-1/</link><pubDate>Thu, 04 May 2023 16:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2024/08/solitaire-phaser-3-tutorial-1/</guid><description>The game of Solitaire is a fun classic single player card game that involves strategy, patience, and sometimes a bit of luck. The card game involves arranging cards in a specific order based on suit and rank, and the goal is to move all the cards from the tableau (the main playing area) into a set of foundations (four piles), each starting with an Ace and building up in ascending order to a King.</description></item><item><title>Solitaire HTML5 Game Tutorial With Phaser 3 Part 2: Game Layout</title><link>https://scottwestover.dev/post/2024/08/solitaire-phaser-3-tutorial-2/</link><pubDate>Thu, 04 May 2023 16:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2024/08/solitaire-phaser-3-tutorial-2/</guid><description>In this tutorial series, we’ll be looking at how to recreate the game Solitaire using the Phaser 3 framework. Here’s an example of what the final game should look like:
Previously, in part 1 , we reviewed the rules and game play of the game Solitaire, setup our project files, and loaded in the assets we will need for our game.
In part 2 of this series, we are going to start building out the layout of our game.</description></item><item><title>Solitaire HTML5 Game Tutorial With Phaser 3 Part 3: Player Input</title><link>https://scottwestover.dev/post/2024/08/solitaire-phaser-3-tutorial-3/</link><pubDate>Thu, 04 May 2023 16:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2024/08/solitaire-phaser-3-tutorial-3/</guid><description>In this tutorial series, we’ll be looking at how to recreate the game Solitaire using the Phaser 3 framework. Here’s an example of what the final game should look like:
Previously, in part 2 , we worked on creating the main layout for our game.
In part 3 of this series, we are going to start working on making our game interactive and we will add support for player input.</description></item><item><title>Solitaire HTML5 Game Tutorial With Phaser 3 Part 4: Moving Cards</title><link>https://scottwestover.dev/post/2024/08/solitaire-phaser-3-tutorial-4/</link><pubDate>Thu, 04 May 2023 16:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2024/08/solitaire-phaser-3-tutorial-4/</guid><description>In this tutorial series, we’ll be looking at how to recreate the game Solitaire using the Phaser 3 framework. Here’s an example of what the final game should look like:
Previously, in part 3 , we focused on adding support for player input by listening for click and drag events in our game.
In part 4 of this series, we are going to start working on adding support for moving cards between the various card piles in our game.</description></item><item><title>Solitaire HTML5 Game Tutorial With Phaser 3 Part 5: Core Solitaire Logic</title><link>https://scottwestover.dev/post/2024/08/solitaire-phaser-3-tutorial-5/</link><pubDate>Thu, 04 May 2023 16:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2024/08/solitaire-phaser-3-tutorial-5/</guid><description>In this tutorial series, we’ll be looking at how to recreate the game Solitaire using the Phaser 3 framework. Here’s an example of what the final game should look like:
Previously, in part 4 , we focused on adding support for moving cards between the various card piles in our game, and we started to stub out the Solitaire class that will have the core logic for our Solitaire game.</description></item></channel></rss>