<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>HTML5 on Scott Westover</title><link>https://scottwestover.dev/categories/html5/</link><description>Recent content in HTML5 on Scott Westover</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 10 Apr 2023 06:00:02 +0000</lastBuildDate><atom:link href="https://scottwestover.dev/categories/html5/index.xml" rel="self" type="application/rss+xml"/><item><title>Build A Connect Four Library In TypeScript - Part 3 (Video)</title><link>https://scottwestover.dev/post/2023/04/build-a-connect-four-library-in-typescript-part-3-video/</link><pubDate>Mon, 10 Apr 2023 06:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2023/04/build-a-connect-four-library-in-typescript-part-3-video/</guid><description>If you are interested in learning how to create a reusable Connect Four library in TypeScript, then you should check out the third video in my new series that I released on YouTube: Building a Connect Four Library in TypeScript - Step by Step Guide - Part 2.
If you prefer a written tutorial, then you can find the same content here on my blog: Build A Connect Four Library In TypeScript - Part 3 .</description></item><item><title>Build A Connect Four Library In TypeScript - Part 2 (Video)</title><link>https://scottwestover.dev/post/2023/02/build-a-connect-four-library-in-typescript-part-2-video/</link><pubDate>Mon, 27 Feb 2023 06:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2023/02/build-a-connect-four-library-in-typescript-part-2-video/</guid><description>If you are interested in learning how to create a reusable Connect Four library in TypeScript, then you should check out the second video in my new series that I released on YouTube earlier today: Building a Connect Four Library in TypeScript - Step by Step Guide - Part 2.
If you prefer a written tutorial, then you can find the same content here on my blog: Build A Connect Four Library In TypeScript - Part 2 .</description></item><item><title>Build A Connect Four Library In TypeScript - Part 1 (Video)</title><link>https://scottwestover.dev/post/2023/02/build-a-connect-four-library-in-typescript-part-1-video/</link><pubDate>Thu, 23 Feb 2023 06:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2023/02/build-a-connect-four-library-in-typescript-part-1-video/</guid><description>If you are interested in learning how to create a reusable Connect Four library in TypeScript, then you should check out my new video that I released on YouTube earlier today: Building a Connect Four Library in TypeScript - Step by Step Guide - Part 1.
If you prefer a written tutorial, then you can find the same content here on my blog: Build A Connect Four Library In TypeScript - Part 1 .</description></item><item><title>Build A Connect Four Library In TypeScript - Part 5</title><link>https://scottwestover.dev/post/2023/02/build-a-connect-four-library-in-typescript-part-5/</link><pubDate>Tue, 07 Feb 2023 06:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2023/02/build-a-connect-four-library-in-typescript-part-5/</guid><description>In this series, we will go over how to create a reusable TypeScript class that can be used to build the game Connect Four, and in a future series we will see how we can use this library to create implementations of the Connect Four game for the CLI and the web.
Previously, in part 4 , we finished updating the logic for checking if a player won the game by getting a Connect Four.</description></item><item><title>Build A Connect Four Library In TypeScript - Part 4</title><link>https://scottwestover.dev/post/2023/02/build-a-connect-four-library-in-typescript-part-4/</link><pubDate>Fri, 03 Feb 2023 06:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2023/02/build-a-connect-four-library-in-typescript-part-4/</guid><description>In this series, we will go over how to create a reusable TypeScript class that can be used to build the game Connect Four, and in a future series we will see how we can use this library to create implementations of the Connect Four game for the CLI and the web.
Previously, in part 3 , we added the logic for allowing the player to place a game piece in a column, logic for validating this move, and we started adding the logic for if the game is over.</description></item><item><title>Build A Connect Four Library In TypeScript - Part 3</title><link>https://scottwestover.dev/post/2023/01/build-a-connect-four-library-in-typescript-part-3/</link><pubDate>Fri, 20 Jan 2023 06:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2023/01/build-a-connect-four-library-in-typescript-part-3/</guid><description>In this series, we will go over how to create a reusable TypeScript class that can be used to build the game Connect Four, and in a future series we will see how we can use this library to create implementations of the Connect Four game for the CLI and the web.
Previously, in part 2 , we added the initial game initialization logic, the ability to reset the game state, and we then learned how we could test our code using the uvu framework.</description></item><item><title>Build A Connect Four Library In TypeScript - Part 2</title><link>https://scottwestover.dev/post/2023/01/build-a-connect-four-library-in-typescript-part-2/</link><pubDate>Tue, 17 Jan 2023 06:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2023/01/build-a-connect-four-library-in-typescript-part-2/</guid><description>In this series, we will go over how to create a reusable TypeScript class that can be used to build the game Connect Four, and in a future series we will see how we can use this library to create implementations of the Connect Four game for the CLI and the web.
Previously, in part 1 , we reviewed the rules and game play of the game Connect Four and we started to build out the initial ConnectFour class by adding the properties and methods that will be needed.</description></item><item><title>Build A Connect Four Library In TypeScript - Part 1</title><link>https://scottwestover.dev/post/2023/01/build-a-connect-four-library-in-typescript-part-1/</link><pubDate>Sun, 15 Jan 2023 06:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2023/01/build-a-connect-four-library-in-typescript-part-1/</guid><description>In this series, we will go over how to create a reusable TypeScript class that can be used to build the game Connect Four, and in a future series we will see how we can use this library to create implementations of the Connect Four game for the CLI and the web.
In part 1 of this series, we are going to review the rules and game play of the game Connect Four and we will start to build out the initial ConnectFour class by adding the properties and methods that will be needed.</description></item><item><title>HTML5 Game Development - Project Setup</title><link>https://scottwestover.dev/post/2022/09/html5-game-development-project-setup/</link><pubDate>Thu, 01 Sep 2022 06:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2022/09/html5-game-development-project-setup/</guid><description>Before we start learning about HTML5 Canvas and start writing any code, the first thing we need to do is setup a development environment that will allow us to easily edit our files, serve our static files on a local web server, and view our changes in real time as we make them.
For this series, we will be trying to keep things as simple as possible, so we will not be using things like node, npm, webpack, vite, etc.</description></item><item><title>HTML5 Game Development - Tutorial Series Announcement</title><link>https://scottwestover.dev/post/2022/08/html5-game-development-tutorial-series-announcement/</link><pubDate>Tue, 30 Aug 2022 06:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2022/08/html5-game-development-tutorial-series-announcement/</guid><description>Today, I wanted to introduce a new series that I will begin working on that will be focusing on creating games with pure JavaScript and rendered on HTML using the HTML Canvas element . This series will focus on step by step tutorials for learning the basics of working with the HTML Canvas elements for game development and then we will move on to creating games.
As we progress through the series, we will be building blocks of re-usable code that you will be able to use to create your own games.</description></item><item><title>HTML5 Game Prototyping Course - Part 1</title><link>https://scottwestover.dev/post/2022/04/html5-game-prototyping-course-part-1/</link><pubDate>Mon, 25 Apr 2022 00:00:02 +0000</pubDate><guid>https://scottwestover.dev/post/2022/04/html5-game-prototyping-course-part-1/</guid><description>Welcome everyone! This is the first of many posts that will cover the topic of game prototyping and we will be putting game prototyping into practice by building some basic games in HTML5 using TypeScript.
What is game prototyping? In game design, game prototyping is the process by which a game designer builds the simplest version of their game in order to test their idea and get feedback. A good prototype will convey the mechanics of the game the designer wants to build and it will allow others to test the gameplay.</description></item></channel></rss>